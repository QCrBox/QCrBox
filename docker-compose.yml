version: "3.8"

services:
  base-ancestor:
    image: "qcrbox/base-ancestor:${QCRBOX_DOCKER_TAG:?Must set env var QCRBOX_DOCKER_TAG}"
    environment:
      QCRBOX_RABBITMQ_QUEUE_NAME: "qcrbox-base-ancestor"
    networks:
      - qcrbox-net
    restart: "unless-stopped"

  qcrbox-message-bus:
    image: "qcrbox/message-bus:${QCRBOX_DOCKER_TAG:?Must set env var QCRBOX_DOCKER_TAG}"
    networks:
      - qcrbox-net
    hostname: "qcrbox-message-bus"
    ports:
      - "${QCRBOX_BIND_ADDRESS:?Must set env var QCRBOX_BIND_ADDRESS}:${QCRBOX_PORT_RABBITMQ:?Must set env var QCRBOX_PORT_RABBITMQ}:5672"
      - "${QCRBOX_BIND_ADDRESS:?Must set env var QCRBOX_BIND_ADDRESS}:${QCRBOX_PORT_RABBITMQ_MANAGEMENT:?Must set env var QCRBOX_PORT_RABBITMQ_MANAGEMENT}:15672"
      - "${QCRBOX_BIND_ADDRESS:?Must set env var QCRBOX_BIND_ADDRESS}:${QCRBOX_PORT_WEBSOCKET:?Must set env var QCRBOX_PORT_WEBSOCKET}:4000"
    restart: unless-stopped
    healthcheck:
      test: rabbitmq-diagnostics -q is_running
      interval: 5s
      timeout: 30s
      start_period: 30s
      # Note: the 'start_interval' option is not supported yet
      # (see https://github.com/docker/compose/issues/10830#issuecomment-1722514100)
      #start_interval: 1s
      retries: 5

  qcrbox-registry:
    image: "qcrbox/registry:${QCRBOX_DOCKER_TAG:?Must set env var QCRBOX_DOCKER_TAG}"
    volumes:
      - ./shared_files:${QCRBOX_SHARED_FILES_DIR:?Must set env var QCRBOX_SHARED_FILES_DIR}
      - qcrbox-registry-db:/mnt/qcrbox_registry_data/
      #- ./services/base_images/base_ancestor/qcrbox_python_module:${QCRBOX_ROOT_DIR:?Must set env var QCRBOX_ROOT_DIR}/qcrbox_python_module
    ports:
      - "${QCRBOX_BIND_ADDRESS}:${QCRBOX_PORT_QCRBOX_REGISTRY:?Must set env var QCRBOX_PORT_QCRBOX_REGISTRY}:8000"
    depends_on:
      qcrbox-message-bus:
        condition: service_healthy
    environment:
      QCRBOX_RABBITMQ_QUEUE_NAME: "qcrbox_registry"
      QCRBOX_HOST_RABBITMQ: "qcrbox-message-bus"
      QCRBOX_PORT_RABBITMQ: "5672"
      #QCRBOX_REGISTRY_SERVER_DB_DIR: "${QCRBOX_SHARED_FILES_DIR:?Must set env var QCRBOX_SHARED_FILES_DIR}"
    networks:
      - qcrbox-net
    restart: "unless-stopped"

  shelx:
    image: "qcrbox/shelx:${QCRBOX_DOCKER_TAG:?Must set env var QCRBOX_DOCKER_TAG}"
    build:
      context: services/applications/shelx
      args:
        QCRBOX_DOCKER_TAG: ${QCRBOX_DOCKER_TAG:?Must set env var QCRBOX_DOCKER_TAG}
    environment:
      QCRBOX_RABBITMQ_QUEUE_NAME: "shelx"
      QCRBOX_APPLICATION_CONFIG_FILE: "configure_shelx.py"
    volumes:
      - ./shared_files:${QCRBOX_SHARED_FILES_DIR:?Must set env var QCRBOX_SHARED_FILES_DIR}
    depends_on:
      - qcrbox-registry
    networks:
      - qcrbox-net
    restart: unless-stopped

networks:
  qcrbox-net:

volumes:
  qcrbox-registry-db:
